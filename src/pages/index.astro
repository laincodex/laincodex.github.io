---
import Layout from "../layouts/Layout.astro";
import Topbar from "../components/Topbar.astro";
import Article from "../components/Article.astro";
import Hover from "../components/Hover.astro";

import MeliDebugImg from "../assets/images/MeliDebugApiInterceptor.png";
import TiendaBebeImg from "../assets/images/tiendabebe.png";
import CienDicenImg from "../assets/images/100dicen.png";
import DockeryzeImg from "../assets/images/dockeryze.png";
import GitWrapperImg from "../assets/images/gitwrapper.png";
import YadnsImg from "../assets/images/yadns.png";
import SsrReactBaseImg from "../assets/images/ssrReactBase.png";

import GoUpIcon from "../assets/icons/GoUp.astro";
import JavascriptIcon from "../assets/icons/javascript.astro";
import TypescriptIcon from "../assets/icons/typescript.astro";
import ReactJSIcon from "../assets/icons/reactjs.astro";
import WebpackIcon from "../assets/icons/webpack.astro";
import TailwindcssIcon from "../assets/icons/tailwindcss.astro";
import JavaIcon from "../assets/icons/java.astro";
import NodejsIcon from "../assets/icons/nodejs.astro";
import RustIcon from "../assets/icons/rust.astro";
import VuejsIcon from "../assets/icons/vuejs.astro";
import DockerIcon from "../assets/icons/docker.astro";


export enum Tech {
  JS,
  TS,
  REACT,
  WEBPACK,
  TAILWIND,
  JAVA,
  NODEJS,
  RUST,
  VUE,
  DOCKER,
}

export const TechStack = {
  [Tech.JS]: {
    icon: JavascriptIcon,
    name: "Javascript"
  },
  [Tech.TS]: {
    icon: TypescriptIcon,
    name: "Typescript"
  },
  [Tech.REACT]: {
    icon: ReactJSIcon,
    name: "ReactJS",
  },
  [Tech.WEBPACK]: {
    icon: WebpackIcon,
    name: "Webpack",
  },
  [Tech.TAILWIND]: {
    icon: TailwindcssIcon,
    name: "Tailwindcss",
  },
  [Tech.JAVA]: {
    icon: JavaIcon,
    name: "Java",
  },
  [Tech.NODEJS]: {
    icon: NodejsIcon,
    name: "NodeJS",
  },
  [Tech.RUST]: {
    icon: RustIcon,
    name: "Rust",
  },
  [Tech.VUE]: {
    icon: VuejsIcon,
    name: "VueJS",
  },
  [Tech.DOCKER]: {
    icon: DockerIcon,
    name: "Docker",
  },
};

export const projects = [
  {
    name: "MeLi Debug",
    page: "meli-debug",
    description: "A chrome extension to preview and debug visual components by intercepting the server response.",
    tag: "Chrome extension",
    image: MeliDebugImg,
    tech_stack: [Tech.TS, Tech.REACT, Tech.WEBPACK]
  },
  {
    name: "La Tienda del Bebe",
    page: "tienda-del-bebe",
    description: "A store page with server side rendering react and an admin panel.",
    tag: "SSR isomorphic web",
    image: TiendaBebeImg,
    tech_stack: [Tech.TS, Tech.REACT, Tech.NODEJS, Tech.WEBPACK, Tech.DOCKER]
  },
  {
    name: "100 Dicen",
    page: "100-dicen",
    tag: "A family videogame",
    image: CienDicenImg,
    tech_stack: [Tech.TS, Tech.VUE, Tech.RUST]
  },
  {
    name: "Dockeryze",
    page: "dockeryze",
    description: "SSR webapp to manage docker templates and instances of your app, for those who need to quickly deploy a test environment of your company's app",
    tag: "Webapp to manage apps instances",
    image: DockeryzeImg,
    tech_stack: [Tech.NODEJS, Tech.VUE, Tech.DOCKER]
  }, 
  {
    name: "SSR-React-base",
    page: "ssr-react-base",
    tag: "Template SSR React app for my projects",
    image: SsrReactBaseImg,
    tech_stack: [Tech.TS, Tech.REACT, Tech.TAILWIND, Tech.NODEJS, Tech.WEBPACK, Tech.DOCKER]
  }, 
  {
    name: "GitWrapper",
    page: "gitwrapper",
    description: "A CLI written in rust to use a different ssh private key on git, ideal for those who travel or simply want to have a separate key for work/personal use.",
    tag: "CLI tool for Git ssh keys",
    image: GitWrapperImg,
    tech_stack: [Tech.RUST]
  }, 
  {
    name: "yaDNS-NX",
    page: "yadns-nx",
    description: "A docker container for a DNS server that enables network connections to Nintendo Switch by intercepting connection to Nintendo's servers.",
    tag: "DNS for Nintendo Switch homebrew users",
    image: YadnsImg,
    tech_stack: [Tech.DOCKER]
  }, 
];
---

<Layout title="Luis Cassih - Software Developer">
  <Topbar class="flex justify-center xl:justify-start h-40 xl:h-[50px] xl:px-5" />
  <main class="flex flex-col">
  <!-- calculate height minus topbar height -->
    <div class="flex flex-col h-[calc(100*var(--vh)-10rem)] xl:h-[calc(100vh-50px)]">
      <div class="flex flex-col xl:flex-row justify-center items-center flex-1">
        <div class="xl:p-5">
          <svg
            class="h-[25em] xl:h-[250px]"
            viewBox="0 0 250 250"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M50.229 106.841C50.229 106.841 138.747 66.4008 215.047 163.078C215.047 163.078 179.684 163.818 122.046 126.253C109.781 118.258 108.636 128.716 111.036 132.376C128.464 158.911 118.856 199.291 118.714 198.413C113.136 164.511 103.106 143.696 49.7915 145.116C24.1265 145.801 19.594 122.873 50.229 106.841Z"
              fill="currentcolor"></path>
            <path
              fill-rule="evenodd"
              clip-rule="evenodd"
              d="M82.8859 89.9374C82.8859 89.9374 144.803 92.3099 164.566 88.6199C184.326 84.9324 217.526 69.9124 217.526 69.9124C217.526 69.9124 165.093 63.8524 144.013 66.2249C122.936 68.5949 82.8859 89.9374 82.8859 89.9374Z"
              fill="#026cd6"
              stroke-width="0.01"
              stroke-miterlimit="1.5"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              d="M59.2981 134.465C65.0467 134.465 69.7069 129.805 69.7069 124.056C69.7069 118.308 65.0467 113.648 59.2981 113.648C53.5496 113.648 48.8894 118.308 48.8894 124.056C48.8894 129.805 53.5496 134.465 59.2981 134.465Z"
              fill="#0f0f0f"></path>
          </svg>
        </div>
        <h1 class="font-normal text-7xl xl:text-5xl">
          Hi! My name is <span class="text-gradient">Luis Cassih,</span>
          <br />I'm a <span class="text-gradient">Software Developer</span>
        </h1>
      </div>
      <a href="#about" class="flex flex-col items-center h-[20em] xl:h-auto">
        <div class="text-6xl xl:text-2xl">Scroll to know about me</div>
        <div class="py-10 xl:py-5">
          <svg
            class="h-28 xl:h-12"
            viewBox="0 0 50 50"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M13.5417 36.4583L27.0833 50L40.625 36.4583L39.1521 34.9854L28.125 46.0125V0H26.0417V46.0125L15.0146 34.9854L13.5417 36.4583Z"
              fill="#026CD6"></path>
          </svg>
        </div>
      </a>
    </div>
    <section class="flex flex-col items-center">
      <Article id="about" title="About">
        <svg
          slot="icon"
          viewBox="0 0 32 32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M26.6667 26.6667H5.33335C3.90738 26.7093 2.71525 25.5911 2.66669 24.1653V7.83335C2.71523 6.40776 3.90759 5.28992 5.33335 5.33335H26.6667C28.0924 5.28992 29.2848 6.40776 29.3334 7.83335V24.1667C29.284 25.5919 28.0922 26.7093 26.6667 26.6667ZM5.33335 8.00001V23.9853L26.6667 24V8.01468L5.33335 8.00001ZM17.9067 21.3333H8.00002C8.09806 20.2295 8.62047 19.2065 9.45735 18.48C10.3891 17.5556 11.6411 17.0256 12.9534 17C14.2656 17.0256 15.5176 17.5556 16.4494 18.48C17.286 19.2068 17.8084 20.2295 17.9067 21.3333ZM24 20H20V17.3333H24V20ZM12.9534 16C12.2388 16.0248 11.546 15.7519 11.0404 15.2463C10.5348 14.7407 10.2619 14.0479 10.2867 13.3333C10.2623 12.6189 10.5354 11.9263 11.0408 11.4208C11.5463 10.9153 12.2389 10.6423 12.9534 10.6667C13.6678 10.6423 14.3604 10.9153 14.8659 11.4208C15.3714 11.9263 15.6444 12.6189 15.62 13.3333C15.6448 14.0479 15.3719 14.7407 14.8663 15.2463C14.3607 15.7519 13.6679 16.0248 12.9534 16ZM24 14.6667H18.6667V12H24V14.6667Z"
            fill="currentcolor"></path>
        </svg>
        <div class="text-6xl xl:text-2xl">
          I’m a creative developer who’s specialized in frontend technologies
          but doesn’t mind to work with any tech stack, from backend with
          Java/NodeJS/Rust to ReactJS/Vue and Flutter for mobile. I love
          acquiring new skills, and programming for me is a medium to create
          things that can make impact on people. I always try to improve the
          environment I’m working on, by creating tools, projects, or simply
          trying to find new techniques to make whatever I’m working better.
        </div>
      </Article>
      <Article title="Tech I've worked with" id="stack">
        <svg
          slot="icon"
          viewBox="0 0 32 32"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M16 28.18L4 18.8467L6.16 17.1667L15.9867 24.8067L25.8267 17.1534L28 18.8467L16 28.18ZM16 22.4867L6.17333 14.8467L4 13.1533L16 3.82001L28 13.1533L25.8133 14.8467L16 22.4867Z"
            fill="currentcolor"></path>
        </svg>
        <ul class="flex flex-wrap justify-center gap-12">
          {
            Object.values(TechStack).map((s) => (
              <li class="flex items-center">
                <div class="mr-2 [&>svg]:h-28 [&>svg]:xl:h-12 ">
                  <!-- <Fragment set:html={s.icon} /> -->
                  <s.icon />
                </div>
                <div class="text-5xl xl:text-2xl font-bold">{s.name}</div>
              </li>
            ))
          }
        </ul>
      </Article>
      <Article title="Some projects I made" id="projects">
        <svg
          slot="icon"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M8.01 18.02L2 12.01L8.01 6L9.425 7.414L4.825 12.014L9.425 16.614L8.011 18.02H8.01ZM15.989 18.02L14.576 16.607L19.176 12.007L14.576 7.407L15.99 6L22 12.01L15.99 18.02H15.989Z"
            fill="currentcolor"></path>
        </svg>
        <ul class="flex flex-wrap gap-8 justify-center">
        {projects.map(w => (
          <Hover enabled={!!w.description} hoverClass="bottom-[20%] right-[50%] translate-x-[50%] z-50 bg-black bg-opacity-90 max-w-[500px] text-center">
            <div slot="hover">{w.description}</div>
            <li class="w-[calc(80*var(--vw))] h-[calc(80*var(--vw))] xl:h-[300px] xl:w-[300px] flex flex-col relative hover:cursor-pointer transition-transform hover:translate-y-[-0.5rem] hover:outline-[#026CD6] hover:outline-2 hover:outline-dashed hover:rounded-xl">
            <a href=`/projects/${w.page}`>
              <div class="absolute rounded-xl h-[100%] z-20 w-[100%]"></div>
              <div class="flex absolute h-[70%] xl:h-[calc(100%-50px)] w-[100%] z-10">
                <div
                  class="flex flex-1 flex-col justify-end rounded-xl pl-5"
                  style={`background: linear-gradient(to top, #010D19 0%, rgba(1, 13, 25, 0.50) 30%, rgba(1, 13, 25, 0.3) 40%,rgba(0,0,0,0.3) 40%, rgba(0,0,0,0.3) 100%), url(${w.image}); background-size: contain;`}
                >
                  <div class="text-7xl xl:text-[1.625rem]">{w.name}</div>
                  <div class="text-5xl xl:text-xl font-light pb-2">{w.tag}</div>
                </div>
              </div>
              <div
                class="flex flex-col bg-[rgba(0,0,0,0.35)] h-[30%] xl:h-[50px] absolute bottom-0 z-10 w-[100%] rounded-b-xl"
              >
                <div class="line-gradient h-1 xl:h-[1px]"></div>
                <ul
                  class="flex flex-1 items-center px-5 gap-3 [&>li>svg]:h-28 xl:[&>li>svg]:w-[30px] xl:[&>li>svg]:h-[30px]"
                >
                  {w.tech_stack.map(t => {
                    const Component = TechStack[t].icon;
                    return <li><Component /></li>;
                  })}
                </ul>
              </div>
            </a>
            </li>
          </Hover>
        ))}

        </ul>
      </Article>
    </section>
    <footer class="mt-36"></footer>
  </main>
  <Hover class="GoUpHover !fixed bottom-20 right-20 xl:bottom-5 xl:right-5" hoverClass="top-[-50px] left-[-10px]">
    <div slot="hover">Go Up</div>
    <button id="scrollUpButton" class="flex cursor-pointer hover:animate-pulse [&>svg]:h-48 [&>svg]:xl:h-14 [&>svg]:fill-white"><GoUpIcon /></button>
  </Hover>
  <style>
    html[data-scroll='0'] .GoUpHover {
      display: none;
    } 
    main {
      margin: 0;
    }
    h1 {
      font-size: 3rem;
      font-weight: 800;
      margin: 0;
    }
    .text-gradient {
      background-image: var(--accent-gradient);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-position: 0%;
    }
  </style>
  <script>
    const scrollUpButton = document.getElementById("scrollUpButton");
    scrollUpButton?.addEventListener("click", () => scrollTo(0,0));
    const storeScroll = () => (document.documentElement.dataset.scroll as Object) = window.scrollY;
    document.addEventListener("scroll", storeScroll);
    storeScroll();
  </script>
</Layout>
